{"version":3,"sources":["utils/Api.js","components/jumbo.js","components/row.js","components/search.js","components/mainTable.js","components/navitem.js","components/navbar.js","components/mainContent.js","App.js","serviceWorker.js","index.js"],"names":["num","URL","axios","get","styles","card","fontFamily","fontSize","fontWeight","background","backgroundColor","marginBottom","Jumbotron","className","style","textAlign","row","TableRow","scope","src","this","props","img","alt","firstName","lastName","email","age","Component","paddingBottom","Search","type","placeholder","aria-label","onChange","edge","marginLeft","marginRight","Table","filtered","map","data","key","login","uuid","name","first","last","picture","medium","phone","dob","date","result","rowData","padding","borderRadius","color","Navitem","onClick","text","length","id","customSort","float","Navbar","navItems","navItem","Main","state","results","searchName","API","then","res","setState","catch","err","console","log","event","target","value","filter","toLowerCase","includes","e","firstNum","secondNum","getAttribute","setAttribute","sort","a","b","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f1c7cc28.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst defaultURL = \"https://randomuser.me/api/\";\r\n\r\nexport default {\r\n  search: (num) => {\r\n    //set the url to initially only get 1 user\r\n    let URL = defaultURL;\r\n    //if a number is supplied, change the URL to get that many results\r\n    if (num) {\r\n      URL += '?results=' + num + '&nat=us';\r\n    }\r\n    return axios.get(URL);\r\n  },\r\n};","import React from \"react\";\r\n\r\nconst styles = {\r\n  card: {\r\n    fontFamily: \"times\",\r\n    fontSize: \"68px\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  background: {\r\n    backgroundColor: \"brown\",\r\n    marginBottom: 0\r\n  }\r\n  \r\n};\r\n\r\nfunction Jumbotron() {\r\n  return (\r\n    <div className=\"jumbotron jumbotron-fluid\" style={styles.background}>\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4 text-center\" style={styles.card}>Vinnie's Employee Directory</h1>       \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React, { Component } from \"react\";\r\n\r\nconst styles = {\r\n  card: {\r\n    textAlign: \"center\"\r\n  },\r\n  row: {\r\n    fontWeight: \"bold\"\r\n  }\r\n};\r\n\r\nexport default class TableRow extends Component {\r\n  render() {\r\n    return (\r\n\r\n    <tr>\r\n      <th scope=\"row\"><img src={this.props.img} alt={this.props.firstName}></img></th>\r\n      <td style={styles.row} >{this.props.firstName} {this.props.lastName}</td>\r\n      <td style={styles.row}>{this.props.email}</td>\r\n      <td style={styles.row}>{this.props.age}</td>\r\n    </tr>\r\n \r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nconst styles = {\r\n  card: {\r\n    paddingBottom: \"10px\",\r\n  }\r\n  \r\n};\r\n\r\nexport default class Search extends Component {\r\n\r\n \r\n  render() {\r\n    return (\r\n      <div className=\"searchBarWrapper\">\r\n        <nav className=\"navbar navbar-light bg-dark\" style={styles.card}>\r\n          <form className=\"form-inline\">\r\n            <input\r\n              className=\"form-control mr-sm-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search employees\"\r\n              aria-label=\"Search\"\r\n              onChange={this.props.onChange}\r\n            />\r\n          </form>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TableRow from \"./row\";\r\nimport Search from \"./search\";\r\n\r\nconst styles = {\r\n  card: {\r\n    marginBottom: \"20px\",\r\n  },\r\n  row: {\r\n    textAlign: \"center\",\r\n  },\r\n  edge:{\r\n    marginLeft: \"25px\",\r\n    marginRight: \"25px\"\r\n  }\r\n};\r\n\r\nexport default class Table extends Component {\r\n  rowData() {\r\n    return this.props.filtered.map((data) => (\r\n      <TableRow\r\n        key={data.login.uuid}\r\n        firstName={data.name.first}\r\n        lastName={data.name.last}\r\n        img={data.picture.medium}\r\n        email={data.email}\r\n        phone={data.phone}\r\n        dob={data.dob.date}\r\n        age={data.dob.age}\r\n      />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"mainTable mainTable \" style={styles.edge}>\r\n          {/* Label Row */}\r\n          <div className=\"mainTable search\" style={styles.card}>\r\n            <Search\r\n              result={this.props.result}\r\n              filtered={this.props.filtered}\r\n              onChange={this.props.onChange}\r\n            />\r\n          </div>\r\n          {/* Data Rows */}\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Picture</th>\r\n                <th scope=\"col\">Full Name</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Age</th>\r\n              </tr>\r\n            </thead>\r\n          <tbody>\r\n            {this.rowData()}            \r\n          </tbody>\r\n              </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nconst styles = {\r\n    card: {\r\n      backgroundColor: \"White\",\r\n      padding: \"10px\",\r\n      borderRadius: \"12px\",\r\n      fontWeight: \"bold\",\r\n      color: \"black\"\r\n    },\r\n  };\r\n\r\nexport default class Navitem extends Component {\r\n  render() {\r\n    return (\r\n      <li className=\"nav-item\" onClick={this.props.onClick}>\r\n        <div className=\"nav-link\">\r\n          {this.props.text.length > 0 && (\r\n            <span className=\"nav-text\" id={this.props.text} customSort='' style={styles.card}> {this.props.text}</span>\r\n          )}\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport Navitem from \"./navitem\";\r\n\r\nconst styles = {\r\n  card: {\r\n    color: \"white\",\r\n    textAlign: \"left\",\r\n    marginRight: \"13px\"\r\n  },\r\n  row:{\r\n      float: \"right\",\r\n      marginRight: \"25px  \"\r\n  }\r\n};\r\n\r\nexport default class Navbar extends Component {\r\n  navItems = [{ id: 1, text: \"Last Name\" }];\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"navbar navbar-light bg-dark\" style={styles.row}>\r\n        <p style={styles.card}>Sort By:{\" \"}</p>\r\n        <ul className=\"navbar-nav\">\r\n          <li>\r\n            {this.navItems.map((navItem) => (\r\n              <Navitem\r\n                key={navItem.id}\r\n                text={navItem.text}\r\n                img={navItem.img}\r\n                onClick={this.props.onClick}\r\n              />\r\n            ))}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport API from \"../utils/Api\";\r\nimport Jumbotron from \"./jumbo\";\r\nimport Table from \"./mainTable\";\r\nimport Navbar from \"./navbar\";\r\n\r\n\r\nexport default class Main extends Component {\r\n  state = {\r\n    results: 200,\r\n    result: [],\r\n    filtered: [],\r\n  };\r\n\r\n  searchName = (num) => {\r\n    API.search(num)\r\n      .then((res) => this.setState({ result: res.data.results }))\r\n      .then(() => this.setState({ filtered: this.state.result }))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.searchName(this.state.results);\r\n  }\r\n\r\n  onChange = (event) => {\r\n    if (event.target.value.length < 1) {\r\n      return this.setState({ filtered: this.state.result });\r\n    } else {\r\n      return this.setState({\r\n        filtered: this.state.result.filter((data) => {          \r\n          data.name.first.toLowerCase();\r\n          data.name.last.toLowerCase();\r\n          data.email.toLowerCase();\r\n          return (\r\n            data.name.first.includes(event.target.value.toLowerCase()) ||\r\n            data.name.last.includes(event.target.value.toLowerCase()) ||\r\n            data.email.includes(event.target.value.toLowerCase())\r\n          );\r\n        }),\r\n      });\r\n    }\r\n  };\r\n\r\n  onClick = (e) => {\r\n    let firstNum = 1;\r\n    let secondNum = -1;\r\n    if (\r\n      e.target.getAttribute(\"customSort\") === \"\" ||\r\n      e.target.getAttribute(\"customSort\") === \"Asc\"\r\n    ) {\r\n      firstNum = 1;\r\n      secondNum = -1;\r\n      e.target.setAttribute(\"customSort\", \"Desc\");\r\n    } else {\r\n      firstNum = -1;\r\n      secondNum = 1;\r\n      e.target.setAttribute(\"customSort\", \"Asc\");\r\n    }\r\n    switch (e.target.id) {\r\n      case \"Last Name\":\r\n        return this.setState({\r\n          filtered: this.state.filtered.sort((a, b) =>\r\n            a.name.last > b.name.last ? firstNum : secondNum\r\n          ),\r\n        });\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <Jumbotron />\r\n        <Navbar filtered={this.state.filtered} onClick={this.onClick} />\r\n        <Table\r\n          onChange={this.onChange}\r\n          result={this.state.result}\r\n          filtered={this.state.filtered}\r\n        />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Main from \"./components/mainContent\"\n\n\nfunction App() {\n  \n\n  return(\n    <div>\n      <Main />\n    </div>\n\n\n  )\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}